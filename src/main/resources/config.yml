# How the bot stores long-term data
# Note that you must configure at least one storage engine
storage:
  engines:
    # Engine name. Can be anything
    engine1:
      # Engine type. Can be "mysql", "old_mysql", "mariadb", "postgresql", "h2", or "sqlite"
      # "mysql" is for MySQL versions > 5.5, "old_mysql" is for MySQL versions <= 5.5
      # https://mariadb.org/
      # https://www.postgresql.org/
      # https://www.h2database.com/html/main.html
      # https://www.sqlite.org/index.html
      type: 'mysql'
      # Whether or not to use this engine
      enabled: false
      connection:
        # Address and port (MySQL, MariaDB, PostgreSQL only)
        address: '127.0.0.1:3306'
        # The name of the database the bot will store data in (MySQL, MariaDB, PostgreSQL only)
        # This must be created beforehand
        database: 'echo'
        # Credentials
        username: ''
        password: ''
        # Extra options to use with this storage engine
        # These values will override any others
        options: 'useSSL=false&useUnicode=true&characterEncoding=utf8'
    # Engine name. Can be anything
    engine2:
      # Engine type. Can be "mysql", "old_mysql", "mariadb", "postgresql", "h2", or "sqlite"
      # "mysql" is for MySQL versions > 5.5, "old_mysql" is for MySQL versions <= 5.5
      # https://mariadb.org/
      # https://www.postgresql.org/
      # https://www.h2database.com/html/main.html
      # https://www.sqlite.org/index.html
      type: 'h2'
      # Whether or not to use this engine
      enabled: true
      connection:
        # File name (SQLite, H2 only)
        file: 'echo'
        # Extra options to use with this storage engine
        # These values will override any others
        options: 'useUnicode=true&characterEncoding=utf8'
  settings:
    # The maximum size of the storage engine connection pool
    # Determines the max number of connections to storage engines
    max-pool-size: 4
    # The minimum size of the storage engine connection pool
    # Determines the min number of connections kept alive to storage engines
    min-idle: 4
    # The maximum lifetime of a connection in the pool
    # Should be at least 30 seconds less than any storage engine or infrastructure-imposed connection time limit
    max-lifetime: '30minutes'
    # The maximum amount of time that the bot will wait for a new connection from the pool before timing out
    timeout: '5seconds'
  # The order in which the storage engines will be used
  # The first available engine will be considered the "master" and will be the authoritative data source
  # Keep in mind that, for redundancy, ALL defined and enabled storage engines will be used
  order:
    - 'engine1'
    - 'engine2'

# How the bot rapidly shares information with other servers along the network
messaging:
  engines:
    # Engine name. Can be anything
    engine1:
      # Engine type. Can be "rabbitmq" or "redis"
      # https://www.rabbitmq.com/
      # https://redis.io/
      type: 'rabbitmq'
      # Whether or not to use this engine
      enabled: false
      connection:
        # Address and port
        address: '127.0.0.1:5672'
        # Virtual host (RabbitMQ only)
        v-host: '/'
        # Credentials
        username: 'guest'
        password: 'guest'
    # Engine name. Can be anything
    engine2:
      # Engine type. Can be "rabbitmq" or "redis"
      # https://www.rabbitmq.com/
      # https://redis.io/
      type: 'redis'
      # Whether or not to use this engine
      enabled: false
      connection:
        # Address and port
        address: '127.0.0.1:6379'
        # Credentials
        password: ''
  settings:
    # The maximum size of the messaging engine connection pool
    # Determines the max number of connections to messaging engines
    max-pool-size: 5 # + 1 for the receiver
    # The minimum size of the messaging engine connection pool
    # Determines the min number of connections kept alive to messaging engines
    min-idle: 5 # + 1 for the receiver
    # The maximum lifetime of a connection in the pool
    # Should be at least 30 seconds less than any messaging engine or infrastructure-imposed connection time limit
    max-lifetime: '30minutes'
    # The maximum amount of time that the bot will wait for a new connection from the pool before timing out
    timeout: '5seconds'

# Service/API keys
keys:
  # Google search API key
  google: ''
  # Wolfram Alpha app ID
  wolfram: ''
  # Imgur client ID
  imgur: ''

# Emotes to use for various functions
emotes:
  # The "alot" emote
  alot: "alot"

# Commands to disable
disabled-commands:
#  - google
#  - lmgtfy

# Chat reply events
chat:
  # The chance to reply to any message regardless of content
  # For example, if set to "0.6" then there will be a 15% chance to respond
  # The value can range from 0 to 1, and will be clipped at those values
  random: 0.15
  # The phrases to respond to (case-insensitive)
  respond:
    - 'echo'
    - 'good bot'
    - 'bad bot'
    - 'smart bot'
    - 'stupid bot'
    - 'dumb bot'

# When true, logs some extra output to the console so you can see if/why things might be failing
debug: false
# Default language (affects console output)
lang: 'en'

# Config version, no touchy plz
version: 1.0